{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js","webpack:///./src/components/seo.js"],"names":["__webpack_require__","r","__webpack_exports__","d","query","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby__WEBPACK_IMPORTED_MODULE_1__","_components_layout__WEBPACK_IMPORTED_MODULE_2__","_components_seo__WEBPACK_IMPORTED_MODULE_3__","_ref","data","console","log","postsFromData","a","createElement","title","to","activeStyle","color","style","posts","allMarkdownRemark","edges","forEach","_ref2","node","push","fields","slug","textDecoration","frontmatter","date","dangerouslySetInnerHTML","__html","html","m","module","exports","require","default","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","React","createContext","ProdPageRenderer","location","pageResources","InternalPageRenderer","Object","assign","json","ListLink","props","react_default","display","marginRight","gatsby_browser_entry","margin","children","Header","siteTitle","marginBottom","textAlign","maxWidth","padding","listStyle","header_ListLink","defaultProps","Layout","_856328897","Fragment","header","site","siteMetadata","SEO","description","lang","meta","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","titleTemplate","name","content","property","author","concat"],"mappings":"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","file":"component---src-pages-index-js-714f33045c5831dbd06f.js","sourcesContent":["import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport { Link } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nexport default ({ data }) => {\n  console.log(postsFromData(data))\n  return (\n    <Layout>\n      <SEO title=\"Home\" />\n      {postsFromData(data)}\n      <Link \n        to=\"/posts/\"\n        activeStyle={{ color: `darkGrey` }}\n        style={{ color: `black` }}\n      >\n      View All Posts\n      </Link>\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n{\n  allMarkdownRemark (\n    filter: { fields: { slug: { ne: null} } },\n    sort: {order: ASC, fields: [frontmatter___date]},\n    limit: 2\n  ){\n    edges {\n      node {\n        html\n        frontmatter {\n          title\n          date\n        }\n        fields {\n          slug\n        }\n      }\n    }\n  }\n}\n`\n\nfunction postsFromData(data) {\n  const posts= [];\n  data.allMarkdownRemark.edges.forEach(( { node }) => {\n    posts.push(\n    <div>\n      <Link\n        to={`/posts/${node.fields.slug}`}\n        activeStyle={{ color: `darkGrey` }}\n        style={{ \n          textDecoration: `none`,\n          color: `black`,\n        }}\n      >\n        <h2>{node.frontmatter.title}</h2>\n      </Link>\n      <p>{node.frontmatter.date}</p>\n      <div dangerouslySetInnerHTML={{ __html: node.html }} />\n      <br/>\n      <hr/>\n      <br/>\n      <br/>\n    </div>\n    )\n  });\n  return posts;\n}","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\n\nconst ListLink = props => (\n    <li style={{ display: `inline-block`, marginRight: `1rem`}}>\n      <Link \n          to={props.to}\n          activeStyle={{ color: `black` }}\n          style={{ \n            textDecoration: `none`,\n            color: `darkGray`,\n            margin: `0 0.5rem 0 0`,\n          }}\n        >{props.children}</Link>\n    </li>\n)\n\nconst Header = ({ siteTitle }) => (\n  <header\n    style={{\n      marginBottom: `1.45rem`,\n    }}\n  >\n    <div\n      style={{\n        textAlign: `center`,\n        margin: `0 auto`,\n        maxWidth: 960,\n        padding: `2.5rem 1.0875rem`,\n      }}\n    >\n      <h1 style={{ margin: 0 }}>\n        <Link\n          to=\"/\"\n          style={{\n            color: `black`,\n            textDecoration: `none`,\n          }}\n        >\n          {siteTitle}\n        </Link>\n      </h1>\n    </div>\n    <div style={{textAlign: `center`}}>\n      <ul style={{listStyle: `none`}}>\n        <ListLink to=\"/posts/\">POSTS</ListLink>\n        <ListLink to=\"/projects/\">PROJECTS</ListLink>\n        <ListLink to=\"/about/\">ABOUT</ListLink>\n      </ul>\n    </div>\n  </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\nimport \"./layout.css\"\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n      <Header siteTitle={data.site.siteMetadata.title} />\n      <div\n        style={{\n          maxWidth: 900,\n          margin: `auto`,\n          padding: `3em`\n        }}\n      >\n        <main>{children}</main>\n      </div>\n    </>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n"],"sourceRoot":""}